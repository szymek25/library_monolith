version: '3.3'

services:
  app:
    image: 'library-system:latest'
    build:
      context: .
    container_name: library-system
    depends_on:
      - mysqldb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/library
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=dbpassword
      - SPRING_DATASOURCE_DRIVER=com.mysql.jdbc.Driver
      - SPRING_EMAIL_USERNAME=pawel.library@gmail.com
      - SPRING_EMAIL_PASSWORD=${EMAIL_KEY}
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    networks:
      - local
    ports:
      - '80:8080'
      - '5005:5005'

  mysqldb:
    image: 'mysql:8.0'
    container_name: db
    environment:
      - MYSQL_ROOT_PASSWORD=dbpassword
      - MYSQL_DATABASE=library
    ports:
      - '3306:3306'
    networks:
      - local
    volumes:
      - ./kube/db:/var/lib/mysql
  keycloak:
    build: ./keycloack
    container_name: keycloak
    command: -v start-dev --import-realm --hostname=localhost --tls-hostname-verifier=ANY
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KAFKA_BOOTSTRAP_SERVERS: http://kafka1:29092
      KAFKA_TOPIC: library
      KAFKA_CLIENT_ID: keycloak
      KAFKA_ADMIN_TOPIC: admin_events
      KAFKA_EVENTS: REGISTER,LOGIN,LOGOUT
    volumes:
      - ./keycloack:/opt/keycloak/data/import
    networks:
      - local
  apigateway:
    image: 'szymek25/library-api-gateway:latest'
    ports:
      - '8081:8081'
    networks:
      - local
    environment:
      USER_SERVICE_ROUTE: http://user-service:8082
  user-service:
    image: 'szymek25/library-user-service:latest'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://user-service-db:3307/users
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=dbpassword
      - SPRING_DATASOURCE_DRIVER=com.mysql.jdbc.Driver
      - USER_SERVICE_CLIENT_SECRET=wDg1nH8IR7Ps46qAmnxhd56JD1GCsrfV
      - KAFKA_BOOTSTRAP_SERVERS=http://kafka1:29092
    ports:
      - '8082'
      - '50005:50005'
    networks:
      - local
    depends_on:
      - user-service-db
      - kafka1
  user-service-db:
    image: 'mysql:8.0'
    container_name: user-db
    environment:
      - MYSQL_ROOT_PASSWORD=dbpassword
      - MYSQL_DATABASE=users
      - MYSQL_TCP_PORT=3307
    ports:
      - '3307:3307'
    networks:
      - local
    volumes:
      - ./kube/db:/var/lib/user-service-db
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - local

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - local
networks:
  local: